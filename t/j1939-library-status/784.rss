<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>J1939 Library status?</title>
    <link>https://community.carloop.io/t/j1939-library-status/784</link>
    <description>Hi All

I&#39;ve been trawling the internet between Particle and here for any info on a J1939 Library. I&#39;m looking to pick up on gear position (and other details) from an aftermarket TCM which talks J1939.

I appreciate there&#39;s been some discussions in the past, but nothing conclusive. Is this something the Carloop libraries can do?

Thanks in advance for any pointers. This is my first foray into CAN/J1939/etc

Thomas</description>
    
    <lastBuildDate>Fri, 21 Dec 2018 05:21:50 +0000</lastBuildDate>
    <category>Software</category>
    <atom:link href="https://community.carloop.io/t/j1939-library-status/784.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>J1939 Library status?</title>
        <dc:creator><![CDATA[cyclin_al1]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://community.carloop.io/u/uktamo">@UKTamo</a> &amp; <a class="mention" href="https://community.carloop.io/u/nathanpdaniel">@nathanpdaniel</a>,</p>
<p>I took a look at Copperhill Technologies that you referenced.<br>
It looks like there are some good examples and resources to take a look at.<br>
A couple of things to look out for:</p>
<ul>
<li>They focus on simulating the ECU (or TCM).  However, you are looking for the other side.  You are looking more for a scan tool example in order to read the data off the existing TCM.</li>
<li>They use a J1939 stack directly for Arduino, but do not reveal the source code for the stack.  I did not look far enough to see how easy it is to put together a J1939 message.  Using Particle &amp; Carloop, you would still need to put together a J1939 message, but then have to convert it into a CANbus message.  From there, the Carloop library and the STM32F processor effectively implement a CAN interface.</li>
<li>Arduino is based on the Wiring language.  Particle devices are also based on the Wiring language.  You still have to port the code to account for the hardware differences.</li>
</ul>
          <p><a href="https://community.carloop.io/t/j1939-library-status/784/6">Read full topic</a></p>
        ]]></description>
        <link>https://community.carloop.io/t/j1939-library-status/784/6</link>
        <pubDate>Fri, 21 Dec 2018 05:21:50 +0000</pubDate>
        <guid isPermaLink="false">community.carloop.io-post-784-6</guid>
        <source url="https://community.carloop.io/t/j1939-library-status/784.rss">J1939 Library status?</source>
      </item>
      <item>
        <title>J1939 Library status?</title>
        <dc:creator><![CDATA[UKTamo]]></dc:creator>
        <description><![CDATA[
            <p>Yep aware of them, but as far as I know it’s arduino only, and I wasn’t sure how compatible if at all they’d be.</p>
          <p><a href="https://community.carloop.io/t/j1939-library-status/784/5">Read full topic</a></p>
        ]]></description>
        <link>https://community.carloop.io/t/j1939-library-status/784/5</link>
        <pubDate>Thu, 20 Dec 2018 20:22:28 +0000</pubDate>
        <guid isPermaLink="false">community.carloop.io-post-784-5</guid>
        <source url="https://community.carloop.io/t/j1939-library-status/784.rss">J1939 Library status?</source>
      </item>
      <item>
        <title>J1939 Library status?</title>
        <dc:creator><![CDATA[nathanpdaniel]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://community.carloop.io/u/uktamo">@UKTamo</a><br>
Have you ever heard of <a href="https://copperhilltech.com/" rel="noopener nofollow ugc">https://copperhilltech.com/</a> ??<br>
This might get you what you’re looking for.  I got the book - I’m just getting started in J1939 stuff (for an ELD device I’m building) but, Wilfred seems to be extremely knowledgable in this area. And helpful.  There are libraries, code examples and a whole lot of explanations around J1939.</p>
<p>I’d also be interested in learning more about what you’re doing and integrating J1939.</p>
<p>Nathan</p>
          <p><a href="https://community.carloop.io/t/j1939-library-status/784/4">Read full topic</a></p>
        ]]></description>
        <link>https://community.carloop.io/t/j1939-library-status/784/4</link>
        <pubDate>Thu, 20 Dec 2018 19:36:05 +0000</pubDate>
        <guid isPermaLink="false">community.carloop.io-post-784-4</guid>
        <source url="https://community.carloop.io/t/j1939-library-status/784.rss">J1939 Library status?</source>
      </item>
      <item>
        <title>J1939 Library status?</title>
        <dc:creator><![CDATA[UKTamo]]></dc:creator>
        <description><![CDATA[
            <p>Hi <a class="mention" href="https://community.carloop.io/u/cyclin_al1">@cyclin_al1</a>,</p>
<p>Thanks for the response.</p>
<p>Realistically I’m only after 2 or 3 messages to be picked up. The system runs at 12v, so no worries there. If anyone has some working examples for J1939 that’d be great, otherwise I’ll need to see what I can sort!</p>
<p>Thanks</p>
          <p><a href="https://community.carloop.io/t/j1939-library-status/784/3">Read full topic</a></p>
        ]]></description>
        <link>https://community.carloop.io/t/j1939-library-status/784/3</link>
        <pubDate>Fri, 14 Dec 2018 10:04:25 +0000</pubDate>
        <guid isPermaLink="false">community.carloop.io-post-784-3</guid>
        <source url="https://community.carloop.io/t/j1939-library-status/784.rss">J1939 Library status?</source>
      </item>
      <item>
        <title>J1939 Library status?</title>
        <dc:creator><![CDATA[cyclin_al1]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://community.carloop.io/u/uktamo">@UKTamo</a>,</p>
<p>As far as I can tell, the Carloop library should be able to help you out.<br>
Reading on Wikipedia, it looks like J1939 is built on top of CANbus.</p><aside class="onebox wikipedia" data-onebox-src="https://en.wikipedia.org/wiki/SAE_J1939">
  <header class="source">

      <a href="https://en.wikipedia.org/wiki/SAE_J1939" target="_blank" rel="noopener">en.wikipedia.org</a>
  </header>

  <article class="onebox-body">
    

<h3><a href="https://en.wikipedia.org/wiki/SAE_J1939" target="_blank" rel="noopener">SAE J1939</a></h3>

<p>Society of Automotive Engineers standard SAE J1939 is the vehicle bus recommended practice used for communication and diagnostics among vehicle components. Originating in the car and heavy-duty truck industry in the United States, it is now widely used in other parts of the world.
 SAE J1939 is used in the commercial vehicle area for connection and communication throughout the vehicle, with the physical layer defined in ISO 11898. A different physical layer is used between the tractor and trailer...</p>

  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<p>If you are using a select few messages to communicate with the TCM, you could probably assemble your own 29-bit extended CANbus message with your J1939 messages built into it.</p>
<p>Then again, if you want to do a number of things, you might be better off to build a J1939 library that depends on the Carloop library.  That way your library could translate between your J1939 messages and the 29-bit extended CANbus message. The Carloop library would then handle the lower-level for you.</p>
<p>NOTE:  The Carloop hardware is meant for 12V automotive systems.  It is not hardware compatible with 24V systems often found in trucks and heavy machinery.  If this is the case, all you would need to do is re-design the power (voltage) regulator and the electrical protection.</p>
          <p><a href="https://community.carloop.io/t/j1939-library-status/784/2">Read full topic</a></p>
        ]]></description>
        <link>https://community.carloop.io/t/j1939-library-status/784/2</link>
        <pubDate>Fri, 14 Dec 2018 05:04:24 +0000</pubDate>
        <guid isPermaLink="false">community.carloop.io-post-784-2</guid>
        <source url="https://community.carloop.io/t/j1939-library-status/784.rss">J1939 Library status?</source>
      </item>
      <item>
        <title>J1939 Library status?</title>
        <dc:creator><![CDATA[UKTamo]]></dc:creator>
        <description><![CDATA[
            <p>Hi All</p>
<p>I’ve been trawling the internet between Particle and here for any info on a J1939 Library. I’m looking to pick up on gear position (and other details) from an aftermarket TCM which talks J1939.</p>
<p>I appreciate there’s been some discussions in the past, but nothing conclusive. Is this something the Carloop libraries can do?</p>
<p>Thanks in advance for any pointers. This is my first foray into CAN/J1939/etc</p>
<p>Thomas</p>
          <p><a href="https://community.carloop.io/t/j1939-library-status/784/1">Read full topic</a></p>
        ]]></description>
        <link>https://community.carloop.io/t/j1939-library-status/784/1</link>
        <pubDate>Thu, 13 Dec 2018 22:26:15 +0000</pubDate>
        <guid isPermaLink="false">community.carloop.io-post-784-1</guid>
        <source url="https://community.carloop.io/t/j1939-library-status/784.rss">J1939 Library status?</source>
      </item>
  </channel>
</rss>
